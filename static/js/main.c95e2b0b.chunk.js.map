{"version":3,"sources":["components/Button.js","components/Header.js","components/About.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","onAdd","showAdd","location","useLocation","pathname","title","About","to","Footer","Task","task","onDelete","onToggle","onDoubleClick","id","reminder","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","name","placeholder","value","onChange","target","checked","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","prev","path","exact","render","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c95e2b0b.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({ color, text, onClick }) => {\n\treturn (\n\t\t<button onClick={onClick} style={{ backgroundColor: color }} className='btn'>\n\t\t\t{text}\n\t\t</button>\n\t);\n};\n\nButton.defaultProps = {\n\tcolor: 'steelblue',\n};\n\nButton.propTypes = {\n\ttext: PropTypes.string,\n\tcolor: PropTypes.string,\n\tonClick: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport Button from './Button';\nimport { useLocation } from 'react-router';\n\nconst Header = ({ onAdd, showAdd }) => {\n\tconst location = useLocation();\n\n\treturn (\n\t\t<header className='header'>\n\t\t\t<h1>Task Tracker</h1>\n\t\t\t{ location.pathname === '/' && <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />}\n\t\t</header>\n\t);\n};\n\n// gives a default value to props if not specified\nHeader.defaultProps = {\n\ttitle: 'Task Tracker',\n};\n\n// type checking for components' props (like Typescript)\nHeader.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n};\n\n//inline styling - CSS in JS\n// const headerStyle = {\n// \tcolor: `red`,\n// \tbackground: 'yellow'\n// }\n\nexport default Header;\n","import { Link } from \"react-router-dom\";\n\nconst About = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h4>Version 1.0.0</h4>\n\t\t\t<Link to=\"/\">Go back</Link>\n\t\t</div>\n\t\t\n\t);\n};\n\nexport default About;","import { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n\treturn (\n\t\t<footer>\n\t\t\t<p>Copyright &copy; 2021</p>\n\t\t\t<Link to='/about'>About</Link>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;","// import PropTypes from 'prop-types';\nimport { FaTimes } from 'react-icons/fa';\n\nconst Task = ({ task, onDelete, onToggle }) => {\n\treturn (\n\t\t<div\n\t\t\tonDoubleClick={() => onToggle(task.id)}\n\t\t\tclassName={`task ${task.reminder ? 'reminder' : ''}`}\n\t\t>\n\t\t\t<h3>\n\t\t\t\t{task.text}\n\t\t\t\t<FaTimes onClick={() => onDelete(task.id)} style={{ color: 'red', cursor: 'pointer' }} />\n\t\t\t</h3>\n\t\t\t<p>{task.day}</p>\n\t\t</div>\n\t);\n};\n\n// Button.defaultProps = {\n\n// }\n\n// Button.propTypes = {\n\n// }\n\nexport default Task;\n","// import PropTypes from 'prop-types';\nimport Task from './Task';\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n\treturn (\n\t\t<>\n\t\t\t{tasks.map((task) => (\n\t\t\t\t<Task onToggle={onToggle} onDelete={onDelete} key={task.id} task={task} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n\n// Button.defaultProps = {\n\n// }\n\n// Button.propTypes = {\n\n// }\n\nexport default Tasks;\n","import { useState } from 'react';\n\nconst AddTask = ({ onAdd }) => {\n\tconst [text, setText] = useState('');\n\tconst [day, setDay] = useState('');\n\tconst [reminder, setReminder] = useState(false);\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (!text) {\n\t\t\talert('Please add task');\n\t\t\treturn;\n\t\t}\n\n\t\tonAdd({ text, day, reminder });\n\n\t\tsetText('');\n\t\tsetDay('');\n\t\tsetReminder(false);\n\t};\n\n\treturn (\n\t\t<form className='add-form' onSubmit={onSubmit}>\n\t\t\t<div className='form-control'>\n\t\t\t\t<label>Task</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='task'\n\t\t\t\t\tid='task'\n\t\t\t\t\tplaceholder='Add Task'\n\t\t\t\t\tvalue={text}\n\t\t\t\t\tonChange={(e) => setText(e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='form-control'>\n\t\t\t\t<label>Day & Time</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='task'\n\t\t\t\t\tid='task'\n\t\t\t\t\tplaceholder='Add Day & Time'\n\t\t\t\t\tvalue={day}\n\t\t\t\t\tonChange={(e) => setDay(e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='form-control form-control-check'>\n\t\t\t\t<label>Set Reminder</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='checkbox'\n\t\t\t\t\tchecked={reminder}\n\t\t\t\t\tvalue={reminder}\n\t\t\t\t\tonChange={(e) => setReminder(e.target.checked)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button className='btn btn-block'>Save Task</button>\n\t\t</form>\n\t);\n};\n\nexport default AddTask;\n","import Header from './components/Header';\nimport About from './components/About';\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n\tconst [showAddTask, setShowAddTask] = useState(false);\n\tconst [tasks, setTasks] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst getTasks = async () => {\n\t\t\tconst tasksFromServer = await fetchTasks();\n\t\t\tsetTasks(tasksFromServer);\n\t\t};\n\t\tgetTasks();\n\t}, []);\n\n\t// Fetch tasks from database\n\tconst fetchTasks = async () => {\n\t\tconst res = await fetch('http://localhost:5000/tasks');\n\t\tconst data = await res.json();\n\t\treturn data;\n\t};\n\n\t// Fetch task from database\n\tconst fetchTask = async (id) => {\n\t\tconst res = await fetch(`http://localhost:5000/tasks/${id}`);\n\t\tconst data = await res.json();\n\t\treturn data;\n\t};\n\n\t// Add Task\n\tconst addTask = async (task) => {\n\t\t// const id = Math.floor(Math.random() * 1000) + 1;\n\t\t// const newTask = { id, ...task };\n\t\t// setTasks([...tasks, newTask]);\n\n\t\tconst res = await fetch(`http://localhost:5000/tasks`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(task),\n\t\t});\n\n\t\tconst data = await res.json();\n\n\t\tsetTasks([...tasks, data]);\n\t};\n\n\t// Delete Task\n\tconst deleteTask = async (id) => {\n\t\tawait fetch(`http://localhost:5000/tasks/${id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t});\n\t\tsetTasks(tasks.filter((task) => task.id !== id));\n\t};\n\n\t// Toggle reminder\n\tconst toggleReminder = async (id) => {\n\t\tconst taskToToggle = await fetchTask(id);\n\t\tconst updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\t\tconst res = await fetch(`http://localhost:5000/tasks/${id}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(updatedTask),\n\t\t});\n\n\t\tconst data = await res.json();\n\n\t\tsetTasks(tasks.map((task) => (task.id === id ? { ...task, reminder: data.reminder } : task)));\n\t};\n\n\treturn (\n\t\t<Router>\n\t\t\t<div className='container'>\n\t\t\t\t<Header showAdd={showAddTask} onAdd={() => setShowAddTask((prev) => !prev)} />\n\t\t\t\t<Route\n\t\t\t\t\tpath='/'\n\t\t\t\t\texact\n\t\t\t\t\trender={() => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{showAddTask && <AddTask onAdd={addTask} />}\n\t\t\t\t\t\t\t{tasks.length > 0 ? (\n\t\t\t\t\t\t\t\t<Tasks tasks={tasks} onToggle={toggleReminder} onDelete={deleteTask} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t'No task to show'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Route path='/about' component={About} />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}